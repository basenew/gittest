#pragma once
#include <iostream>
#include "ros/ros.h"
#include "log/log.h"

enum ERR_CODE
{
    ERR_UNKNOW = -1,
    ERR_OK = 0,
    ERR_FAIL,

    ERR_ALLOC_MEM_FAIL,
    ERR_STAT_FILE,

    ERR_INVALID_LOCATE_TYPE,
    ERR_INVALID_PARAM          = 5,
    ERR_INVALID_JSON,
    ERR_INVALID_HOST_PORT,
    ERR_INVALID_OP,
    ERR_INVALID_URL,
    ERR_INVALID_VALUE          = 10,
    ERR_INVALID_FIELD,

	ERR_FILE_NOT_EXIST,
    ERR_MAP_ALREADY_LOADING,

    ERR_CREATE_THREAD_FAIL,
    ERR_OPEN_REPEAT            = 15,

    ERR_HTTP_GET_FAIL,
    ERR_HTTP_POST_FAIL,
    ERR_HTTP_GET_FILE_FAIL,
    ERR_HTTP_POST_FILE_FAIL,
    ERR_RSP_FAIL               = 20,
    ERR_OPEN_FILE_FAIL,
    ERR_READ_FILE_FAIL,
    ERR_PARSE_SCHEME_FAIL,
    ERR_TRANSFER_FILE_FAIL,

    ERR_NONE_MAP,
    ERR_NONE_PATROL            = 26,
    ERR_NONE_SCHEME,
    ERR_ON_LOCATING,
    ERR_ON_RUNNING,
    ERR_SCHEME_NOT_FOUND,
    ERR_SCHEME_OVERTIME        = 31,
    ERR_SCHEME_SAVE_FAIL,
    ERR_MAP_NOT_FOUND,
    ERR_REMOVE_FILE_FAIL,
    ERR_NONE_GPS,
	ERR_ALREADY_RUNNING        = 36,
    ERR_MAP_NOT_USING,
    ERR_MAP_MUST_EQ_USING,
	ERR_RENAME_USING_MAP,
	ERR_REMOVE_USING_MAP,
    ERR_DEVICE_GS_ERROR        = 41,
    ERR_NOT_LOCATED,
    ERR_NOT_RUNNING,
    ERR_LOCATE_FAIL,
    ERR_LOCATING,
    ERR_NAVIGATING             = 46,
    ERR_TASK_NOT_READY,
    ERR_NOT_LOCATED_BY_SPC_MAP,
	ERR_PATH_NOT_MERGED,
	ERR_NONE_CHARGE_SCHEME,
	ERR_CHARGE_POINT_NOT_SET   = 51,
	ERR_TASK_OP_CONFLICT,
	ERR_LOCATED_OTHER_MAP,
	ERR_SERVICE_NOT_READY,
	ERR_NONE_NAV_STATUS,
    ERR_SCHEME_DISABLED        = 56,
    ERR_CHARGE_DISABLED,
    ERR_MAP_NONE_PATH,
    ERR_STOP_NAV_TIMEOUT,
    ERR_MAP_LOADING,

    ERR_GS_BASE = 500,
    ERR_GS_FAIL = ERR_GS_BASE,
    ERR_GS_MAP_NOT_FOUND,
    ERR_GS_HTTP_REQUEST_ERROR,
    ERR_GS_OPERATE_DATA_FAILED,
    ERR_GS_PATH_NOT_FOUND,
    ERR_GS_SYSTEM_NOT_HEALTHY,
    ERR_GS_LOCALIZATION_NOT_READY,
    ERR_GS_MOVEBASE_NOT_READY,
    ERR_GS_LOCALIZATION_FILE_INVALID,
    ERR_GS_LOCALIZATION_PARAM_INVALID,
    ERR_GS_MOVEBASE_USBKEY_INVALID,
    ERR_GS_SERVICE_CALLING_FAILED,
    ERR_GS_INIT_POINT_NOT_FOUND,
    ERR_GS_NOT_INITIALIZE,
    ERR_GS_SCAN_MAP_PROGRAM_ALREADY_STOPPED,
    ERR_GS_RECORD_PATH_PROGRAM_STATUS_ERROR,
    ERR_GS_RECORD_PATH_PROGRAM_ALREADY_STOPPED,
    ERR_GS_SERVICE_CALLING_ERROR,
    ERR_GS_PATH_ALREADY_IN_USED,
    ERR_GS_JSON_FORMAT_ERROR,
    ERR_GS_PARSE_PATH_FILE_ERROR,
    ERR_GS_SAVE_PATH_ERROR,
    ERR_GS_TM_TASK_QUEUE_IS_EMPTY,
    ERR_GS_TM_TASK_STATUS_IS_ERROR,
    ERR_GS_TM_TASK_QUEUE_PARAM_ERROR,
    ERR_GS_TM_TASK_MAP_NOT_SETTED,
    ERR_GS_DS_MAP_NOT_FOUND,
    ERR_GS_DS_FILE_OPERATION_ERROR,
    ERR_GS_TM_SERVICE_ERROR,
    ERR_GS_TM_SERVICE_RESPONSE_ERROR,
    ERR_GS_POSITION_NOT_EXIST,
    ERR_GS_GEERTER_PROGRAM_ALREADY_STOP,
    ERR_GS_MULTI_TASK_NOT_RUNNING,
    ERR_GS_MAP_NAME_ALREADY_IN_USED,
    ERR_GS_COPY_FILE_FAILED,
    ERR_GS_MAP_LOADER_ERROR,
    ERR_GS_TM_TASK_MAP_NOT_FOUND,
    ERR_GS_FILE_SYSTEM_ERROR,
    ERR_GS_UPDATE_SYSTEM_ERROR,
    ERR_GS_NT_SERVICE_ERROR,
    ERR_GS_INVALID_JSON,
    ERR_GS_NO_POINT,
    ERR_GS_NO_TYPE_POINT,
    ERR_GS_LIDAR_ERR,
    ERR_GS_CHASSIS_ERR
};

int get_err_code(const char* err_msg);
int get_gs_err_code(const std::string& err_msg);
const char* get_err_msg(int err);


